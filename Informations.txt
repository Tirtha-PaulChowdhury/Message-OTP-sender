What is an API?
---------------------------------------
An API is a set of definitions and protocols for building and integrating application software. API stands for application programming interface.

APIs let your product or service communicate with other products and services without having to know how they’re implemented. This can simplify 
app development, saving time and money. When you’re designing new tools and products—or managing existing ones—APIs give you flexibility; simplify 
design, administration, and use; and provide opportunities for innovation.


1) API KEYS:
------------------------------

API stands for Application Programming Interface. In short, API is the protocol for communication between different applications.

There are two main functions of an API key:
-------------------------------------------------------------------------------------------------------------------

Recognition:     To allow the service provider to identify the calling user/application. This information allows the service provider to 
                               track calls by individual caller, monitor trends, and ensure the caller doesn’t “abuse” the resource.

Access control:      To allow the service provider to grant access to the calling user/application.





2) HTTP Request 
--------------------------------------------------------------

HTTP requests work as the intermediary transportation method between a client/application and a server. The client submits an 
HTTP request to the server, and after internalizing the message, the server sends back a response. The response contains status 
information about the request.

What Are the Various Types of HTTP Request Methods?
--------------------------------------------------------------------------------------------------------------------------------------------------

GET
----------------
GET is used to retrieve and request data from a specified resource in a server. GET is one of the most popular HTTP request techniques. 
In simple words, the GET method is used to retrieve whatever information is identified by the Request-URL.

HEAD
----------------------
The HEAD technique requests a reaction that is similar to that of GET request, but doesn’t have a message-body in the response. 
The HEAD request method is useful in recovering meta-data that is written according to the headers, without transferring the
entire content. 
The technique is commonly used when testing hypertext links for accessibility, validity, and recent modification.

POST
------------------
Another popular HTTP request method is POST. In web communication, POST requests are utilized to send data to a server to create 
or update a resource.  The information submitted to the server with POST request method is archived in the request body of the HTTP 
request. The HTTP POST method is often used to send user-generated data to a server. One example is when a user uploads a profile photo.

PUT
--------------
PUT is similar to POST as it is used to send data to the server to create or update a resource. The difference between the two is that PUT requests 
are idempotent. This means that if you call the same PUT requests multiple times, the results will always be the same.

DELETE
------------------------
Just as it sounds, the DELETE request method is used to delete resources indicated by a specific URL. Making a DELETE request will remove the targeted resource.

TRACE
-------------------------
The TRACE method allows clients to view whatever message is being received at the other end of the request chain so that they can use the 
information for testing or diagnostic functions.

CONNECT
-----------------------------------
The CONNECT request method is used by the client to create a network connection to a web server over a particular HTTP. A good example is SSL tunneling. 
In a nutshell, CONNECT request establishes a tunnel to the server identified by a specific URL.